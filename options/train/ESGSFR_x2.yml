# GENERATE TIME: Wed Sep 11 09:28:03 2024
# CMD:
# basicsr/train.py -opt /mnt/sda/yh/BasicSR-master/options/train/MYSR/MMM_CNNCate_SRx2_multi_80w.yml --launcher pytorch --auto_resume



# general settings
name: ESGFR_CA_dim55win16_traning
model_type: SRModel
scale: 2
num_gpu: 2
manual_seed: 0
# find_unused_parameters: True

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/DIV2K/DIV2K_train_HR_sub
    dataroot_lq: /mnt/sda/yh/datasets/DIV2K/DIV2K_train_LR_bicubic/X2_sub
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 10
    prefetch_mode: ~

  val_1:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/benchmark/Set5/Set5/HR
    dataroot_lq: /mnt/sda/yh/datasets/benchmark/Set5/Set5/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  val_2:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/benchmark/Set14/Set14/HR
    dataroot_lq: /mnt/sda/yh/datasets/benchmark/Set14/Set14/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  val_3:  # the 3rd test dataset
    name: B100
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/benchmark/B100/HR
    dataroot_lq: /mnt/sda/yh/datasets/benchmark/B100/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  val_4:
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/benchmark/Urban100/HR
    dataroot_lq: /mnt/sda/yh/datasets/benchmark/Urban100/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  val_5:
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: /mnt/sda/yh/datasets/benchmark/Manga109/Manga109/HR
    dataroot_lq: /mnt/sda/yh/datasets/benchmark/Manga109/Manga109/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk


# network structures
network_g:
  type: ESGFR_CA
  upscale: 2
  in_chans: 3
  embed_dim: 55
  num_basicblock: 4
  num_heads: 5
  num_layer: 6
  window_size: 16
  convffn_kernel_size: 7
  img_range: 1.
  mlp_ratio: 1
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.9]

  scheduler:
    type: MultiStepLR
    milestones: [400000, 640000, 720000, 760000, 784000]
    gamma: 0.5

  total_iter: 800000
  warmup_iter: 20000

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e4
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: yes
    
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 2
      test_y_channel: yes

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
